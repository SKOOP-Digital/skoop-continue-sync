{
  "name": "skoop-continue-sync",
  "displayName": "Skoop Continue Sync",
  "description": "Extension to synchronize Continue.dev settings for team members",
  "version": "0.1.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/SKOOP-Digital/skoop-continue-sync"
  },
  "engines": {
    "vscode": "^1.74.0",
    "node": ">=20.18.1"
  },
  "extensionDependencies": [
    "Continue.continue",
    "SpecStory.specstory-vscode"
  ],
  "os": [
    "win32",
    "darwin",
    "linux"
  ],
  "arch": [
    "x64",
    "arm64"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:skoop-continue-sync.applyTeamSettings"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "skoop-continue-sync.applyTeamSettings",
        "title": "Apply Team Continue Settings"
      },
      {
        "command": "skoop-continue-sync.clearAllConfigs",
        "title": "Clear All Continue Configurations"
      },
      {
        "command": "skoop-continue-sync.checkForUpdates",
        "title": "Check for Extension Updates"
      },
      {
        "command": "skoop-continue-sync.installUpdate",
        "title": "Install Extension Update"
      },
      {
        "command": "skoop-continue-sync.forceUpdateCheck",
        "title": "Force Update Check (Debug)"
      },
      {
        "command": "skoop-continue-sync.updateStatus",
        "title": "Show Update Status (Debug)"
      }
    ],
    "keybindings": [
      {
        "command": "skoop-continue-sync.applyTeamSettings",
        "key": "ctrl+shift+s ctrl+shift+a",
        "mac": "cmd+shift+s cmd+shift+a",
        "when": "workspaceFolderCount != 0"
      },
      {
        "command": "skoop-continue-sync.clearAllConfigs",
        "key": "ctrl+shift+s ctrl+shift+c",
        "mac": "cmd+shift+s cmd+shift+c",
        "when": "workspaceFolderCount != 0"
      },
      {
        "command": "skoop-continue-sync.checkForUpdates",
        "key": "ctrl+shift+s ctrl+shift+u",
        "mac": "cmd+shift+s cmd+shift+u",
        "when": "workspaceFolderCount != 0"
      },
      {
        "command": "skoop-continue-sync.installUpdate",
        "key": "ctrl+shift+s ctrl+shift+i",
        "mac": "cmd+shift+s cmd+shift+i",
        "when": "workspaceFolderCount != 0"
      }
    ],
    "configuration": {
      "title": "Skoop Continue Sync",
      "properties": {
        "skoop-continue-sync.apiKey": {
          "type": "string",
          "default": "",
          "description": "API key for authentication with config endpoint",
          "password": true
        },
        "skoop-continue-sync.applyConfig": {
          "type": "boolean",
          "default": false,
          "description": "Set to true to apply team configuration (will reset to false after application)"
        },
        "skoop-continue-sync.clearConfig": {
          "type": "boolean",
          "default": false,
          "description": "Set to true to clear all Continue configurations (will reset to false after clearing)"
        },
        "skoop-continue-sync.enableAutoUpdates": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic checking for extension updates"
        },
        "skoop-continue-sync.refreshInterval": {
          "type": "number",
          "default": 86400,
          "minimum": 300, 
          "maximum": 999999,
          "description": "Interval in seconds between automatic refresh checks for both config and extension updates (minimum 300 seconds)"
        },
        "skoop-continue-sync.checkForUpdates": {
          "type": "boolean",
          "default": false,
          "description": "Set to true to manually check for extension updates (will reset to false after checking)"
        },
        "skoop-continue-sync.installUpdate": {
          "type": "boolean",
          "default": false,
          "description": "Set to true to install available extension update (will reset to false after installation)"
        },
        "skoop-continue-sync.verboseLogging": {
          "type": "boolean",
          "default": false,
          "description": "Enable verbose debug logging for troubleshooting"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "lint": "eslint src --ext ts",
    "package": "npx @vscode/vsce package --no-dependencies",
    "package:rename": "node -e \"const fs = require('fs'); const pkg = require('./package.json'); const oldName = 'skoop-continue-sync-' + pkg.version + '.vsix'; const newName = 'skoop-continue-sync.vsix'; if (fs.existsSync(oldName)) { fs.renameSync(oldName, newName); console.log('Renamed ' + oldName + ' to ' + newName); }\"",
    "package:static": "npm run package && npm run package:rename"
  },
  "devDependencies": {
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "eslint": "^8.57.1",
    "typescript": "^4.9.0"
  },
  "dependencies": {
    "js-yaml": "^4.1.0"
  }
}
