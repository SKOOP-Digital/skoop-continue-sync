name: Build and Package Extension

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required to create releases and upload assets
      issues: write    # Required for generating release notes

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Compile TypeScript
      run: npm run compile

    - name: Upload extension package (dev build)
      uses: actions/upload-artifact@v4
      with:
        name: skoop-continue-sync-extension-dev
        path: "*.vsix"
        if-no-files-found: warn

    - name: Update package.json version
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        # Calculate version: base version + build number
        BASE_VERSION="0.1"
        REPO_OWNER="SKOOP-Digital"  # Repository owner
        BUILD_NUMBER=${{ github.run_number }}
        NEW_VERSION="${BASE_VERSION}.${BUILD_NUMBER}"
        TAG_VERSION="v${BASE_VERSION}.${BUILD_NUMBER}"
        echo "Updating version to ${NEW_VERSION}"
        echo "Release tag will be ${TAG_VERSION}"
        echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
        echo "TAG_VERSION=${TAG_VERSION}" >> $GITHUB_ENV

        # Update package.json
        sed -i "s/\"version\": \"[^\"]*\"/\"version\": \"${NEW_VERSION}\"/" package.json

        # Verify the change
        grep '"version"' package.json

    - name: Rebuild with new version
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        npm run compile

    - name: Repackage with new version
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        npx @vscode/vsce package --no-dependencies

    - name: Rename to static name
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        # Rename the newly created vsix file to static name
        ls -la *.vsix
        mv skoop-continue-sync-*.vsix skoop-continue-sync.vsix
        ls -la skoop-continue-sync.vsix

    - name: Create GitHub Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG_VERSION }}
        name: Release ${{ github.run_number }} (v${{ env.NEW_VERSION }})
        body: |
          Automated release ${{ github.run_number }}

          ## Changes
          - Automated build from commit ${{ github.sha }}
          - Version: ${{ env.NEW_VERSION }}
        files: skoop-continue-sync.vsix
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ github.token }}
        TAG_VERSION: ${{ env.TAG_VERSION }}
        NEW_VERSION: ${{ env.NEW_VERSION }}
